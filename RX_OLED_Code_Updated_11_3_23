#include <SPI.h>                  //SPI
#include <nRF24L01.h>
#include <RF24.h>
#include <U8g2lib.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_DPS310.h>
#include <Fonts/FreeMono9pt7b.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

RF24 radio(9, 10); // CE, CSN (MAKE SURE THESE ARE THE RIGHT PINS ON ARDUINO)

const byte address[6] = "00001";
char combinedMessage[32];
//char receivedAltitudeStr[32];

Adafruit_SSD1306 OLED_1(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

//U8G2_SSD1306_128X64_NONAME_F_HW_I2C OLED_1(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);

void setup() {
  Serial.begin(115200);

  if(!OLED_1.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { 
    Serial.println("SSD1306 allocation failed");
    for(;;);
  }
  delay(2000);

  OLED_1.setFont(&FreeMono9pt7b);
  OLED_1.clearDisplay();
  OLED_1.setTextSize(1);             
  OLED_1.setTextColor(WHITE);

  // OLED_1.begin();
  // OLED_1.clearDisplay();
  // OLED_1.setFont(u8g2_font_fub11_tr);
  
  
  radio.begin();
  radio.openReadingPipe(1, address);
  radio.setPALevel(RF24_PA_MIN);
  radio.startListening();
}

void loop() {
  if (radio.available()) {
    char combinedMessage[32]; 
    //char altitudeMessage[32];
    radio.read(&combinedMessage, sizeof(combinedMessage));
    //radio.read(&altitudeMessage, sizeof(altitudeeMessage));
    // Serial.println(text);

  String combinedStr = String(combinedMessage);
  int separatorIndex = combinedStr.indexOf('|'); //Defines the index of | in the receiving string as an integer value

  String splStr = combinedStr.substring(4, separatorIndex - 3); //Create a new string from the receiving string that contains the SPL value
  String altitudeStr = combinedStr.substring(separatorIndex + 12, separatorIndex + 20); //Create a new string from the receiving string that contains the altitude value

  float splValue = splStr.toFloat();
  float ALT_DRONE = altitudeStr.toFloat();
  //String receivedStr(altitudeMessage);

  // if(receivedStr.startsWith("SPL: ")) {

  //   String splValueStr = receivedStr.substring(11);
  //   float splValue = splValueStr.toFloat();
  // }

  // if(receivedStr.startswith("Drone Alt: ");
  //   //String ALT_Drone_Str = received
  //   String
  //   float ALT_DRONE = ALT_Drone_Str.toFloat();

    
    OLED_1.clearDisplay();  // Clear the previous content

      // Display text and graphics
      OLED_1.setCursor(0, 10);      // Set "SPL Value: " at this position on OLED
      OLED_1.print("SPL Value: ");  // Print "SPL Value: " on OLED

      OLED_1.setCursor(0, 25);      // Set SPL receiving value at this position on OLED
      OLED_1.print(splValue);       // Print SPL receiving value on OLED
      OLED_1.print(" dB");          // Print SPL units (dB) on OLED

      OLED_1.setCursor(0,40);        // Set "Drone Alt: " at this position on OLED
      OLED_1.print("Drone Alt: ");   // Print "Drone Alt: " on OLED
      
      OLED_1.setCursor(0,55);        // Set position of altitude value on OLED
      //String altitudeStr = String(ALT_DRONE, 2);
      OLED_1.print(ALT_DRONE, 2);    // Print altitude value on OLED
      //OLED_1.print(altitudeStr);

      OLED_1.display();  // Update the OLED display



      delay(500);
    
    // OLED_1.firstPage(); // Original code before edits
    // do {
    // OLED_1.clearDisplay();
    // OLED_1.setCursor(0, 20);
    // OLED_1.print("SPL Value: ");

    // OLED_1.setCursor(0,40);
    // OLED_1.print(splValue);
    // OLED_1.print(" dB");


    // OLED_1.sendBuffer();
    // }
    // while (OLED_1.nextPage());


    // Serial.println("Received SPL Value");
    // Serial.print(splValue);
    // Serial.println(" dB");
    
    //delay(500);
    }
  }

